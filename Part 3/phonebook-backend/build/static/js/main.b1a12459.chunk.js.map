{"version":3,"sources":["services/persons.js","components/Notification.js","components/Persons.js","components/Filter.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","colorClass","className","Persons","props","persons","setPersonToDelete","deletePerson","map","person","key","onSubmit","name","number","type","onClick","find","p","toLowerCase","Filter","filterChange","onChange","PersonForm","addPerson","newName","nameChange","newNumber","numberChange","value","App","useState","personToDelete","setPersons","setNewName","setNewNumber","newFilter","setFilter","setMessage","setColorClass","useEffect","personService","initialPeople","handleNameChange","event","target","handleNumberChange","handleFilterChange","actionMessage","setTimeout","preventDefault","includes","window","confirm","changeNumber","returnedPerson","concat","catch","error","console","log","personChanged","returnPersons","length","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1a12459.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const baseUrl = 'https://phonebook-zavala.herokuapp.com/api/persons'\r\nconst baseUrl = '/api/persons'\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst erase = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, erase, update }","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message, colorClass }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={colorClass}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\n// component to render contacts added to the phonebook and delete buttons\r\nconst Persons = (props) => {  \r\n    const { persons, setPersonToDelete, deletePerson } = props\r\n    \r\n    return(\r\n      persons.map((person) => \r\n      <form  key={person.id} onSubmit={deletePerson}>\r\n      <div className={\"nameStyle\"}  key={person.name}>      \r\n        {[<b key={person.name}>{'Name: '}</b>, person.name]} {[<b key={person.number}>{'  number: '}</b>, person.number]}\r\n        <button className={\"button\"} type=\"submit\" onClick={() =>{\r\n          setPersonToDelete(persons.find(p => p.name.toLowerCase() === person.name.toLowerCase()))\r\n        } \r\n      }>{'delete'}</button>\r\n        </div>\r\n      </form>\r\n      )\r\n    )\r\n  }\r\n\r\n  export default Persons","import React, { useState, useEffect } from 'react'\r\n\r\n// component to render contacts added to the phonebook and delete buttons\r\nconst Filter = (props) => {\r\n    const { filterChange } = props\r\n    return(\r\n      <tbody >\r\n        <tr >\r\n        <td > <b>{'Filter show with: '}</b> </td>\r\n        <td ><input onChange={filterChange} /> </td>\r\n        </tr>\r\n      </tbody>\r\n    )\r\n  }\r\n\r\n  export default Filter","import React, { useState, useEffect } from 'react'\r\n\r\n// component for rendering name and number entry and button\r\nconst PersonForm = (props) => {\r\n    const  { addPerson, newName, nameChange, newNumber, numberChange } = props\r\n    return (\r\n      <form  onSubmit={addPerson}>\r\n          <div className={\"labelStyle\"}>\r\n            {'Name: '}<input value={newName}\r\n            onChange={nameChange}/>\r\n          </div>\r\n          <div className={\"labelStyle\"}>\r\n            {'Number: '}<input value={newNumber}\r\n            onChange={numberChange}\r\n            />\r\n            </div>\r\n          <div>\r\n            <button className={\"button\"} type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n  }\r\n\r\n  export default PersonForm","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport './index.css'\n\nconst App = () => {\n  \n  const [ personToDelete, setPersonToDelete ] = useState ('')\n  const [ persons, setPersons ] = useState ([])\n  const [ newName, setNewName ] = useState ('')\n  const [ newNumber, setNewNumber ] = useState ('')\n  const [ newFilter, setFilter ] = useState ('')\n  const [ message, setMessage ] = useState('')\n  const [ colorClass , setColorClass ] = useState('')\n  \n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPeople => {\n      setPersons(initialPeople)})\n    }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {    \n    setFilter(event.target.value)\n  }\n  \n  const actionMessage = (message, colorClass) => {    \n    setMessage(message)\n    setColorClass(colorClass)\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n\n  // Component to add new person to phonebook or chage number if already exists\n  const addPerson = (event) => {\n    event.preventDefault()\n    const names = persons.map((person) => person.name.toLowerCase())\n    if (names.includes(newName.toLowerCase())){\n      if (window.confirm (`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        changeNumber(newName)\n      }\n      setNewName('')\n      setNewNumber('')\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n    }\n    personService\n    .create(newPerson)\n    .then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      actionMessage(`Added ${newName} to phonebook`, \"nameAdded\" )\n      setNewName('')\n      setNewNumber('')\n    })\n    .catch(error => {\n      actionMessage(error.response.data.error, \"error\")\n      console.log(error.response.data.error)\n    })\n    }\n  }\n\n  // component to delete person from de phonebook\n  const deletePerson = (event) => {\n    event.preventDefault()\n    if (window.confirm(`Delete ${personToDelete.name}?`)){\n    personService\n      .erase(personToDelete.id).then(() =>{\n      setPersons(persons.filter(p => p.name !== personToDelete.name))\n      actionMessage(`${personToDelete.name} has been removed`, \"nameRemoved\" )\n    }).catch(() => {\n        setPersons(persons.filter(p => p.name !== personToDelete.name))\n        actionMessage(`Information of ${personToDelete.name} has already been removed from server`, \"error\" )\n      })\n    }\n  }\n  \n  // component to change number in case contact already exist\n  const changeNumber = name => {\n    const person = persons.find(p => p.name.toLowerCase() === name.toLowerCase())\n    const personChanged = { ...person, number: newNumber}\n    personService\n    .update(personChanged.id, personChanged)\n    .then(returnPersons => {\n      setPersons(persons.map(person => person.id !== personChanged.id ? person : returnPersons))\n      actionMessage(`Number of ${person.name} has been changed`, \"numberChanged\" )\n    })\n    .catch(error => {\n      actionMessage(error.response.data.error, \"error\")\n      console.log(error.response.data.error)\n    })\n  }\n\n  if (persons.length === 0){\n    return (\n      <div>\n        <h2 className={\"headerStyle\"}>{'Phonebook'}</h2>\n        <Notification message={message} colorClass={colorClass} />\n        <table className={\"labelStyle\"}>\n        <Filter filterChange={handleFilterChange}/>\n        </table>\n        <h2 className={\"headerStyle\"}>{'Add a new contact'}</h2>\n        <PersonForm addPerson={addPerson} newName={newName} nameChange={handleNameChange}\n          newNumber={newNumber} numberChange={handleNumberChange} />\n        <h2 className={\"headerStyle\"}>{'Numbers'}</h2>\n        <h3 className={\"headerStyle\"}>{`You have no contacts to show`}</h3>\n      </div>\n    )\n  } else {\n  return (\n    <div>\n      <h2 className={\"headerStyle\"}>{'Phonebook'}</h2>\n      <Notification message={message} colorClass={colorClass} />\n      <table className={\"labelStyle\"}>\n      <Filter filterChange={handleFilterChange}/>\n      </table>\n      <h2 className={\"headerStyle\"}>{'Add a new contact'}</h2>\n      <PersonForm addPerson={addPerson} newName={newName} nameChange={handleNameChange}\n        newNumber={newNumber} numberChange={handleNumberChange} />\n      <h2 className={\"headerStyle\"}>{'Numbers'}</h2>\n      <Persons persons={persons\n        .filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))}\n        personToDelete={personToDelete} setPersonToDelete={setPersonToDelete}\n        deletePerson={deletePerson} />\n    </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}